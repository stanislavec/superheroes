{"version":3,"sources":["reducers/initialState.js","actions/actionTypes.js","reducers/rootReducer.js","reducers/searchReducer.js","reducers/selectReducer.js","actions/makeActions.js","header/index.js","main-section/heroes-list/index.js","main-section/index.js","App.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["initialState","search","select","SEARCH","SELECT","REMOVE","rootReducer","combineReducers","state","arguments","length","undefined","action","type","result","concat","selected","removeItemId","forEach","item","i","image","removed","beforeItem","Object","values","map","slice","afterItem","receiveSearch","universe","query","allActions","filter","name","indexOf","dispatch","Promise","resolve","reject","fetchSearch","then","setSearch","receiveSelect","hero","fetchSelect","setSelect","receiveRemove","fetchRemove","setRemove","Header","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showCloseButton","removeHero","bind","assertThisInitialized","counter","showHeroes","reduce","o","hasOwnProperty","keys","count","e","makeActions","document","querySelectorAll","classList","toggle","react_default","a","createElement","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","_this2","className","makeHeroArr","key","onClick","toogleClose","renderSVG","alt","src","Component","connect","selectedHeroes","bindActionCreators","Heroes","selectHero","heroesArr","Main","dcActive","marvelHeroes","HeroesListJson","marvel","dcHeroes","dc","handleChange","value","isDC","setState","target","searchResult","_this3","console","log","window","innerWidth","react_router_dom","placeholder","onChange","heroes_list","showHero","to","location","pathname","id","revertUniverse","App","header","main_section","Boolean","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74bfd31b.chunk.js","sourcesContent":["export default {\n  search: [],\n  select: []\n};\n","export const SEARCH = 'SEARCH'\nexport const SELECT = 'SELECT'\nexport const REMOVE = 'REMOVE'\n","import { combineReducers } from 'redux';\nimport search from './searchReducer';\nimport select from './selectReducer'\n\nconst rootReducer = combineReducers({\n  search,\n  select\n});\n\nexport default rootReducer;\n","import initialState from './initialState';\nimport { SEARCH } from '../actions/actionTypes';\n\nexport default function search(state = initialState.search, action) {\n  let newState;\n  switch (action.type) {\n    case SEARCH:\n      newState = action.result;\n      return newState ? newState : null;\n    default:\n      return state ? state : null;\n  }\n}\n","import initialState from './initialState';\nimport { SELECT, REMOVE } from '../actions/actionTypes';\n\nexport default function search(state = initialState.select, action) {\n  let newState;\n  switch (action.type) {\n    case SELECT:\n      newState = state.concat(action.selected);\n      return newState;\n    case REMOVE:\n      let removeItemId\n      state.forEach((item, i) => {\n        if (item.image === action.removed.image) {\n          removeItemId = i\n        }\n      })\n      let beforeItem = Object.values(state).map(item => item).slice(0, removeItemId)\n      let afterItem = Object.values(state).map(item => item).slice(removeItemId + 1)\n      state = beforeItem.concat(afterItem)\n      return newState = state;\n    default:\n      return state;\n  }\n}\n","import * as allActions from './actionTypes';\n\n// Функция поиска\nexport function receiveSearch(universe, query) {\n  if (!query) {\n    let result = ''\n    return {\n      type: allActions.SEARCH,\n      result\n    }\n  }\n  let result = universe.filter(item => item.name.indexOf(query) !== -1);\n  return function (dispatch) {\n    return fetchSearch(result)\n      .then(\n        result => dispatch(setSearch(result)),\n      )\n  };\n};\n\nfunction fetchSearch(result) {\n  return new Promise((resolve, reject) => {\n    resolve(result)\n  })\n};\n\nfunction setSearch(result) {\n  return {\n    type: allActions.SEARCH,\n    result\n  }\n}\n\n// Функция выбора\nexport function receiveSelect(hero) {\n  return function (dispatch) {\n    return fetchSelect(hero)\n      .then(\n        hero => dispatch(setSelect(hero)),\n      )\n  };\n};\n\nfunction fetchSelect(hero) {\n  return new Promise((resolve, reject) => {\n    resolve(hero)\n  })\n};\n\nfunction setSelect(hero) {\n  return {\n    type: allActions.SELECT,\n    selected: hero\n  }\n}\n\n// Функция удаления\nexport function receiveRemove(hero) {\n  return function (dispatch) {\n    return fetchRemove(hero)\n      .then(\n        hero => dispatch(setRemove(hero)),\n      )\n  };\n};\n\nfunction fetchRemove(hero) {\n  return new Promise((resolve, reject) => {\n    resolve(hero)\n  })\n};\n\nfunction setRemove(hero) {\n  return {\n    type: allActions.REMOVE,\n    removed: hero\n  }\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport * as makeActions from '../actions/makeActions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.removeHero = this.removeHero.bind(this);\n  };\n  state = {\n    showCloseButton: false\n  }\n  makeHeroArr () {\n    let heroArr = this.props.showHeroes\n    let counter = heroArr.reduce(function (o, i) {\n      if (!o.hasOwnProperty(i.image)) {\n        o[i.image] = 0;\n      }\n      o[i.image]++;\n      return o;\n    }, {});\n    let result = Object.keys(counter).map(function (image) {\n      return {\n        image: image,\n        count: counter[image]\n      };\n    });\n    return result\n  };\n  removeHero (e, hero) {\n    this.props.makeActions.receiveRemove(hero);\n  };\n  toogleClose(e, i) {\n    let target = document.querySelectorAll('.close-button')[i]\n    target.classList.toggle('hidden')\n  }\n  renderSVG () {\n    return (\n      <svg\n        width = \"10\"\n        height = \"10\"\n        viewBox = \"0 0 10 10\"\n        fill = \"none\"\n        xmlns = \"http://www.w3.org/2000/svg\"\n      >\n        <path d=\"M1 1L5 5M9 9L5 5M5 5L9 1M5 5L1 9\" stroke=\"white\" strokeWidth=\"2\"/>\n      </svg>\n    )\n  }\n  render() {\n    return (\n      <div className=\"header-section-wrapper\">\n        {this.makeHeroArr().map(\n          (hero, i) =>\n            <div key={i} onClick={(e) => this.toogleClose(e, i)} className=\"selected-hero\">\n              <div\n                className=\"close-button hidden\"\n                onClick={(e) => this.removeHero(e, hero)}\n              >\n                {this.renderSVG()}\n              </div>\n              <img alt={hero.name} src={hero.image}></img>\n              {hero.count ? (\n                <div className=\"hero-count\">{hero.count}</div>\n              ) : (''\n              )}\n            </div>\n        )}\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  makeActions: PropTypes.object,\n  selectedHeroes: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedHeroes: state.select\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    makeActions: bindActionCreators(makeActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport * as makeActions from '../../actions/makeActions';\n\nclass Heroes extends Component {\n  constructor(props) {\n    super(props);\n    this.selectHero = this.selectHero.bind(this);\n  };\n  selectHero(e, hero) {\n    this.props.makeActions.receiveSelect(hero);\n  };\n  render() {\n    let heroesArr = this.props.showHeroes? this.props.showHeroes : null\n    return (\n      <div className=\"heroes-list-wrapper\">\n        {heroesArr ? (\n          heroesArr.map(\n            (hero, i) =>\n              <div\n                onClick={(e) => this.selectHero(e, hero)}\n                key={i}\n                className=\"hero\"\n              >\n                <img alt={hero.name} src={hero.image}></img>\n                <p>{hero.name}</p>\n              </div>\n          )\n        ) : (\n          <p className=\"nothing\">Ничего не найдено</p>\n        )}\n      </div>\n    );\n  }\n};\n\nHeroes.propTypes = {\n  makeActions: PropTypes.object,\n  selectedHeroes: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedHeroes: state.select\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    makeActions: bindActionCreators(makeActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Heroes);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport * as makeActions from '../actions/makeActions';\nimport HeroesList from './heroes-list/index'\nimport HeroesListJson from './heroes-list/superheroes.json'\n\nclass Main extends Component {\n  state = {\n    dcActive: true,\n    search: '',\n    marvelHeroes: HeroesListJson.marvel,\n    dcHeroes: HeroesListJson.dc\n  };\n  revertUniverse (e, value) {\n    this.props.makeActions.receiveSearch([], '');\n    if ((this.state.dcActive && value.isDC) || (!this.state.dcActive && !value.isDC)) return\n    this.setState(state => ({\n      dcActive: !this.state.dcActive,\n      search: ''\n    }));\n  };\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  };\n  handleChange(e) {\n    let value = e.target.value;\n    let universe = this.state.dcActive ? this.state.dcHeroes : this.state.marvelHeroes\n    this.setState(state => ({\n      search: value\n    }));\n    this.props.makeActions.receiveSearch(universe, this.state.search);\n  };\n  showHero () {\n    if (this.props.searchResult && this.props.searchResult.length && this.state.search) {\n      return this.props.searchResult\n    }\n    if (this.state.search && !this.props.searchResult) {\n      return\n    }\n    return this.state.dcActive ? this.state.dcHeroes : this.state.marvelHeroes\n  };\n  render() {\n    console.log(window.innerWidth)\n    return (\n      <Router>\n        <div className=\"main-section-wrapper\">\n          <div className=\"search\">\n            <input\n              placeholder=\"Имя героя\"\n              type=\"search\"\n              value={this.state.search}\n              onChange={this.handleChange}\n            >\n            </input>\n            <div className=\"icon-loupe\">\n              <img alt=\"loupe\" src=\"./icon-loupe.png\"></img>\n            </div>\n          </div>\n          {window.innerWidth < 767 ? (\n            <HeroesList showHeroes={this.showHero()}/>\n          ) : ('')\n          }\n          <div className=\"select\">\n            <Link to={window.location.pathname === '/superheroes/' ? window.location.pathname  + '/dc' : '/dc'}>\n              <div id=\"dc\" onClick={(e) => this.revertUniverse(e, {isDC: true})} className=\"select-icon\">\n                <img alt='dc' className={this.state.dcActive ? '' : 'opacity-logo'} src=\"./dc-logo.png\"></img>\n              </div>\n            </Link>\n            <Link to={window.location.pathname === '/superheroes/' ? window.location.pathname  + '/marvel' : '/marvel'}>\n              <div id=\"marvel\" onClick={(e) => this.revertUniverse(e, {isDC: false})} className=\"select-icon\">\n                <img alt='marvel' className={this.state.dcActive ? 'opacity-logo' : ''} src=\"./Marvel.png\"></img>\n              </div>\n            </Link>\n          </div>\n          {window.innerWidth >= 767 ? (\n            <HeroesList showHeroes={this.showHero()}/>\n          ) : ('')\n          }\n        </div>\n      </Router>\n    );\n  }\n}\n\nMain.propTypes = {\n  makeActions: PropTypes.object,\n  searchResult: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    searchResult: state.search\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    makeActions: bindActionCreators(makeActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport PropTypes from 'prop-types';\nimport * as makeActions from './actions/makeActions';\nimport HeaderSection from './header/index'\nimport MainSection from './main-section/index'\nimport './App.css';\n\n// const store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          {\n            (this.props.selectedHeroes && this.props.selectedHeroes.length) ? (\n              <HeaderSection showHeroes={this.props.selectedHeroes}/>\n            ) : ''\n          }\n          <MainSection/>\n        </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  makeActions: PropTypes.object,\n  selectedHeroes: PropTypes.array\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedHeroes: state.select\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    makeActions: bindActionCreators(makeActions, dispatch)\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './store/configureStore';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from '../reducers/rootReducer';\n// import thunk from 'redux-thunk';\nimport thunkMiddleware from 'redux-thunk'\n\nexport default function configureStore() {\n  return createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    applyMiddleware(thunkMiddleware)\n  );\n}\n"],"sourceRoot":""}